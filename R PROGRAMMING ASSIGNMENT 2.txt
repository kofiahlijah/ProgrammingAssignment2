makeCacheMatrix <- function(x = matrix()) {
      m <- NULL
      set <- function(y) {
            x <<- y
            m <<- NULL
      }
      get <- function() x
      setinverse <- function(solve) m <<- solve
      getinverse <- function() m
      list(set = set, get = get,
           setinverse = setinverse,
           getinverse = getinverse)
}



cacheSolve <- function(x, ...) {
      m <- x$getinverse()
      if(!is.null(m)) {
            message("getting cached data")
            return(m)
      }
      data <- x$get()
      m <- solve(data, ...)
      x$setinverse(m)
      m
}



TEST MATRIX 
a <- diag(2,3)
a

CachedMatrix <- makeCacheMatrix(a)
cacheSolve(CachedMatrix)

b <- diag(5,6)
b

CachedMatrix <- makeCacheMatrix(b)
cacheSolve(CachedMatrix)


x = rbind(c(2, -1/5), c(-1/5, 2))
m = makeCacheMatrix(x)
m$get()



> a <- diag(5,3)
> a
     [,1] [,2] [,3]
[1,]    5    0    0
[2,]    0    5    0
[3,]    0    0    5
> CachedMarix <- makeCacheMatrix(a)
> cacheSolve(CachedMarix)
     [,1] [,2] [,3]
[1,]  0.2  0.0  0.0
[2,]  0.0  0.2  0.0
[3,]  0.0  0.0  0.2
> b <- diag(2,6)
> b
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]    2    0    0    0    0    0
[2,]    0    2    0    0    0    0
[3,]    0    0    2    0    0    0
[4,]    0    0    0    2    0    0
[5,]    0    0    0    0    2    0
[6,]    0    0    0    0    0    2
> CachedMarix <- makeCacheMatrix(b)
> CachedMarix <- makeCacheMatrix(b)
> cacheSolve(CachedMarix)
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]  0.5  0.0  0.0  0.0  0.0  0.0
[2,]  0.0  0.5  0.0  0.0  0.0  0.0
[3,]  0.0  0.0  0.5  0.0  0.0  0.0
[4,]  0.0  0.0  0.0  0.5  0.0  0.0
[5,]  0.0  0.0  0.0  0.0  0.5  0.0
[6,]  0.0  0.0  0.0  0.0  0.0  0.5
